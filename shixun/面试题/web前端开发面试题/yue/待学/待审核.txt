5，规避 javascript 多人开发函数重名问题
(1) 可以开发前规定命名规范，根据不同开发人员开发的功能在函数前加前缀
(2) 将每个开发人员的函数封装到类中，调用的时候就调用类的函数，即使函数重名只
要类名不重复就 ok

6，javascript 面向对象中继承实现
javascript 面向对象中的继承实现一般都使用到了构造函数和 Prototype 原型链， 简单
的代码如下：
function Animal(name) {
this.name = name;
}
Animal.prototype.getName = function() {alert(this.name)}
function Dog() {};
Dog.prototype = new Animal("Buddy");
Dog.prototype.constructor = Dog;
var dog = new Dog();

13，JavaScript 中如何检测一个变量是一个 String 类型?请写出函数实现
String 类型有两种生成方式：
(1)Var str = “hello world”;
(2)Var str2 = new String(“hello world”);
function IsString(str){
return (typeof str == "string" || str.constructor == String);
}
var str = "";
alert(IsString(1));
alert(IsString(str));
alert(IsString(new String(str)));


16，JavaScript 有哪几种数据类型
简单：Number，Boolean，String，Null，Undefined
复合：Object，Array，Function


18，JavaScript 中如何对一个对象进行深度 clone
function cloneObject(o) {
if(!o || 'object' !== typeof o) {
return o;
}
var c = 'function' === typeof o.pop ? [] : {};
var p, v;
for(p in o) {
if(o.hasOwnProperty(p)) {
v = o[p];
if(v && 'object' === typeof v) {
c[p] = Ext.ux.clone(v);
}
else {
c[p] = v;
}
}
}
return c;
}

22，ajax 是什么? ajax 的交互模型? 同步和异步的区别? 如何解决跨域问题?
Ajax 是多种技术组合起来的一种浏览器和服务器交互技术，基本思想是允许一个互联
网浏览器向一个远程页面/服务做异步的 http 调用， 并且用收到的数据来更新一个当前 web
页面而不必刷新整个页面。该技术能够改进客户端的体验。包含的技术：
XHTML：对应 W3C 的 XHTML 规范，目前是 XHTML1.0。
CSS：对应 W3C 的 CSS 规范，目前是 CSS2.0
DOM：这里的 DOM 主要是指 HTML DOM，XML DOM 包括在下面的 XML 中
JavaScript：对应于 ECMA 的 ECMAScript 规范
XML：对应 W3C 的 XML DOM、XSLT、XPath 等等规范
XMLHttpRequest：对应 WhatWG 的 Web Applications1.0规范
(http://whatwg.org/specs/web-apps/current-work/)
AJAX 交互模型
同步：脚本会停留并等待服务器发送回复然后再继续
异步：脚本允许页面继续其进程并处理可能的回复
跨域问题简单的理解就是因为 JS 同源策略的限制， a.com 域名下的 JS 无法操作 b.com
或 c.a.com 下的对象，具体场景如下：
PS：(1)如果是端口或者协议造成的跨域问题前端是无能为力的
(2) 在跨域问题上，域仅仅通过 URL 的首部来识别而不会尝试判断相同的 IP 地址对应
的域或者两个域是否对应一个 IP
前端对于跨域的解决办法：
(1) document.domain+iframe
(2) 动态创建 script 标签

23，什么是闭包?下面这个 ul，如何点击每一列的时候 alert 其 index?
这是第一条
这是第二条
这是第三条
内部函数被定义它的函数的外部区域调用的时候就产生了闭包。
(function A() {
var index = 0;
var ul = document.getElementById("test");
var obj = {};
for (var i = 0, l = ul.childNodes.length; i < l; i++) {
if (ul.childNodes[i].nodeName.toLowerCase() == "li") {
var li = ul.childNodes[i];
li.onclick = function() {
index++;
alert(index);
}
}
}
})();

24，请给出异步加载 js 方案，不少于两种
默认情况 javascript 是同步加载的， 也就是 javascript 的加载时阻塞的， 后面的元素要
等待 javascript 加载完毕后才能进行再加载，对于一些意义不是很大的 javascript，如果放
在页头会导致加载很慢的话，是会严重影响用户体验的。
异步加载方式：
(1) defer，只支持 IE
(2) async：
(3) 创建 script，插入到 DOM 中，加载完毕后 callBack，见代码：
function loadScript(url, callback){
var script = document.createElement("script")
script.type = "text/javascript";
if (script.readyState){ //IE
script.onreadystatechange = function(){
if (script.readyState == "loaded" ||
script.readyState == "complete"){
script.onreadystatechange = null;
callback();
}
};
} else { //Others: Firefox, Safari, Chrome, and Opera
script.onload = function(){
callback();
};
}
script.src = url;
document.body.appendChild(script);
}

26，js 中如何定义 class,如何扩展 prototype?
Ele.className = “***”; //***在 css 中定义，形式如下：.*** {…}
A.prototype.B = C;
A 是某个构造函数的名字
B 是这个构造函数的属性
C 是想要定义的属性的值


27，如何添加 html 元素的事件,有几种方法.
(1) 为 HTML 元素的事件属性赋值
(2) 在 JS 中使用 ele.on*** = function() {…}
(3) 使用 DOM2的添加事件的方法 addEventListener 或 attachEvent


29，多浏览器检测通过什么?
(1) navigator.userAgent
(2) 不同浏览器的特性，如 addEventListener

30，js 的基础对象有那些, window 和 document 的常用的方法和属性列出来
String,Number,Boolean
Window:
方法：setInterval,setTimeout,clearInterval,clearTimeout,alert,confirm,open
属性：name,parent,screenLeft,screenTop,self,top,status
Document
方法：
createElement,execCommand,getElementById,getElementsByName,getElementByT
agName,write,writeln
属性：cookie,doctype,domain,documentElement,readyState,URL,



31，前端开发的优化问题
(1) 减少 http 请求次数：css spirit,data uri
(2) JS，CSS 源码压缩
(3) 前端模板 JS+数据， 减少由于 HTML 标签导致的带宽浪费， 前端用变量保存 AJAX
请求结果，每次操作本地变量，不用请求，减少请求次数
(4) 用 innerHTML 代替 DOM 操作，减少 DOM 操作次数，优化 javascript 性能
(5) 用 setTimeout 来避免页面失去响应
(6) 用 hash-table 来优化查找
(7) 当需要设置的样式很多时设置 className 而不是直接操作 style
(8) 少用全局变量
(9) 缓存 DOM 节点查找的结果
(10) 避免使用 CSS Expression
(11) 图片预载
(12) 避免在页面的主体布局中使用 table，table 要等其中的内容完全下载之后才会显
示出来，显示比 div+css 布局慢

32，如何控制网页在网络传输过程中的数据量
启用 GZIP 压缩
保持良好的编程习惯，避免重复的 CSS，JavaScript 代码，多余的 HTML 标签和属性

6.	CSS定位方式有哪些?position属性的值有哪些?他们之间的区别是什么?
在CSS中关于定位的内容是：position:relative | absolute | static | fixed
?	static 没有特别的设定，遵循基本的定位规定，不能通过z-index进行层次分级。
?	relative 不脱离文档流，参考自身静态位置通过 top,bottom,left,right 定位，并且可以通过z-index进行层次分级。
?	absolute 脱离文档流，通过 top,bottom,left,right 定位。选53D6其最近的父级定位元素，当父级 position 为 static 时，absolute元素将以body坐标原点进行定位，可以通过z-index进行层次分级。
?	fixed 固定定位，这里他所固定的对像是可视窗口而并非是body或是父级元素。可通过z-index进行层次分级。

1. 写出CSS选择器种类

1、标签选择器（如：body,div,p,ul,li）
2、类选择器（如：class="head",class="head_logo"）
3、ID选择器（如：id="name",id="name_txt"）
4、全局选择器（如：*号）
5、组合选择器（如：.head .head_logo,注意两选择器用空格键分开）
6、继承选择器（如：div p,注意两选择器用空格键分开）
7、伪类选择器（如：就是链接样式,a元素的伪类，4种不同的状态：link、visited、active、hover。）

2. 清除浮动的方法有哪些
1、使用空标签清除浮动。
2、使用overflow属性。?此方法有效地解决了通过空标签元素清除浮动而不得不增加无意代码的弊端。使用该方法是只需在需要清除浮动的元素中定义CSS属性：overflow:auto，即可！”zoom:1″用于兼容IE6。
3、使用after伪对象清除浮动。?该方法只适用于非IE浏览器?。
#layout:after{display:block;clear:both;content:”";visibility:hidden;height:0;}






